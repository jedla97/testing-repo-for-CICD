name: Build all subject PDFs

# Feel free to increment this counter in your attempts to do things
# the smart way instead of the easy way.
#
# total_hours_wasted = 7

on:
  push:
    branches:
      - master
    paths:
      - "**/*.tex"
  workflow_dispatch:
    branches:
      - main
    paths:
      - "**/*.tex"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Clone the repository
      - name: Set up Git repository
        uses: actions/checkout@v2

      # Make the builds
      # If there is a better way to do this, instead of doing it one-by-one, let me know
      - name: Build BPC-KRY
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-KRY
          root_file: main.tex

      - name: Build BPC-PDA
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: BPC-PDA
          root_file: main.tex

    

      # Prepare tag name
      - name: Create tag
        id: create_tag
        run: |
          tag=build-$(date +%Y%m%d-%H%M%S)
          echo "::set-output name=tag::$tag"
      # Create release draft, so we can add the files
      - name: Create draft release
        id: create_draft_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: ${{ steps.create_tag.outputs.tag }}
          draft: true
          prerelease: false

      # Upload the assets
      # Again, if there is better way, please, let me know.
      - name: Add BPC-KRY to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_draft_release.outputs.upload_url }}
          asset_path: ./BPC-KRY/main.pdf
          asset_name: BPC-KRY.pdf
          asset_content_type: application/pdf

      # Publish the release
      - name: Publish release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_draft_release.outputs.id }}