name: Build all subject PDFs

# Feel free to increment this counter in your attempts to do things
# the smart way instead of the easy way.
#
# total_hours_wasted = 7

on:
  push:
    branches:
      - master
    paths:
      - "**/*.tex"
  workflow_dispatch:
    branches:
      - main
    paths:
      - "**/*.tex"

jobs:

  directories: # Job that list subdirectories
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }} # generate output name dir by using inner step output
    steps:
      - uses: actions/checkout@v2
      - id: set-dirs # Give it an id to handle to get step outputs in the outputs key above
        run: echo "::set-output name=dir::$(ls -d */ | sed "s/template\/\/n//g" |
         tr -dc '[:alnum:]\n\r-' | jq -R -s -c 'split("\n")[:-1]')"
        # Define step output named dir base on ls command transformed to JSON thanks to jq
  loop:
    runs-on: ubuntu-latest
    needs: [directories] # Depends on previous job
    strategy:
      matrix:
        dir: ${{fromJson(needs.directories.outputs.dir)}} # List matrix strategy from directories dynamically
    steps:
      # Clone the repository
      - name: Set up Git repository
        uses: actions/checkout@v2

      # Make the builds
      # If there is a better way to do this, instead of doing it one-by-one, let me know
      - name: Build ${{matrix.dir}}
        uses: xu-cheng/latex-action@v2
        with:
          latexmk_shell_escape: true
          working_directory: ${{matrix.dir}}
          root_file: main.tex

      - name: Upload
        uses: actions/upload-artifact@master
        with:
          name: ${{matrix.dir}}.pdf
          path: ${{matrix.dir}}/main.pdf

  release:
    runs-on: ubuntu-latest
    needs: loop
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - uses: actions/checkout@v2

    - name: Create tag
      id: create_tag
      run: |
        tag=build-$(date +%Y%m%d-%H%M%S)
        echo "::set-output name=tag::$tag"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.create_tag.outputs.tag }}
        release_name: ${{ steps.create_tag.outputs.tag }}
        draft: false
        prerelease: false
  add:
    runs-on: ubuntu-latest
    needs: [ directories, loop, release ]
    strategy:
      matrix:
        dir: ${{fromJson(needs.directories.outputs.dir)}} # List matrix strategy from directories dynamically
   
    steps:
    - uses: actions/checkout@v2

    - name: Download Artifact
      uses: actions/download-artifact@master
      with:
        name: ${{matrix.dir}}.pdf
        path: ${{matrix.dir}}

    - name: Upload Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./${{matrix.dir}}/${{matrix.dir}}.pdf
        asset_name: ${{matrix.dir}}.pdf
        asset_content_type: application/pdf

